{
  "view render": {
    "prefix": [
      "ci:view:render",
      "$view->render",
      "view render"
    ],
    "body": "\\$view->render('${1:view}', [${2:options}], ${3:boolean});",
    "description": "Builds the output based upon a file name and any data that has already been set."
  },
  "view renderString": {
    "prefix": [
      "ci:view:renderString",
      "$view->renderString",
      "view renderString"
    ],
    "body": "\\$view->renderString('${1:view}', [${2:options}], ${3:boolean});",
    "description": "Builds the output based upon a string and any data that has already been set."
  },
  "view excerpt": {
    "prefix": [
      "ci:view:excerpt",
      "$view->excerpt",
      "view excerpt"
    ],
    "body": "\\$view->excerpt('${1:string}', ${2:length});",
    "description": "Extract first bit of a long string and add ellipsis"
  },
  "view setData": {
    "prefix": [
      "ci:view:setData",
      "$view->setData",
      "view setData"
    ],
    "body": "\\$view->setData([${1:data}], '${2:context}');",
    "description": "Sets several pieces of view data at once."
  },
  "view setVar": {
    "prefix": [
      "ci:view:setVar",
      "$view->setVar",
      "view setVar"
    ],
    "body": "\\$view->setVar('${1:name}', ${2:value}, '${3:context}');",
    "description": "Sets a single piece of view data."
  },
  "view resetData": {
    "prefix": [
      "ci:view:resetData",
      "$view->resetData",
      "view resetData"
    ],
    "body": "\\$view->resetData();",
    "description": "Removes all of the view data from the system."
  },
  "view getData": {
    "prefix": [
      "ci:view:getData",
      "$view->getData",
      "view getData"
    ],
    "body": "\\$view->getData();",
    "description": "Returns the current data that will be displayed in the view."
  },
  "view extend": {
    "prefix": [
      "ci:view:extend",
      "$this->extend",
      "view extend"
    ],
    "body": "\\$this->extend('${1:layout}');",
    "description": "Specifies that the current view should extend an existing layout."
  },
  "view section": {
    "prefix": [
      "ci:view:section",
      "$this->section",
      "view section"
    ],
    "body": "\\$this->section('${1:name}');",
    "description": "Starts holds content for a section within the layout."
  },
  "view endSection": {
    "prefix": [
      "ci:view:endSection",
      "$this->endSection",
      "view endSection"
    ],
    "body": "\\$this->endSection();",
    "description": "Captures the last section."
  },
  "view renderSection": {
    "prefix": [
      "ci:view:renderSection",
      "$this->renderSection",
      "view renderSection"
    ],
    "body": "\\$this->renderSection('${1:sectionName}', ${2:boolean});",
    "description": "Renders a section's contents."
  },
  "view include": {
    "prefix": [
      "ci:view:include",
      "$this->include",
      "view include"
    ],
    "body": "\\$this->include('${1:view}', [${2:options}], ${3:boolean});",
    "description": "Used within layout views to include additional views."
  },
  "view getPerformanceData": {
    "prefix": [
      "ci:view:getPerformanceData",
      "$view->getPerformanceData",
      "view getPerformanceData"
    ],
    "body": "\\$view->getPerformanceData();",
    "description": "Returns the performance data that might have been collected during the execution. Used primarily in the Debug Toolbar."
  }
}
